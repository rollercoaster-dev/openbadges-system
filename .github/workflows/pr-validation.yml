name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install Dependencies
        run: pnpm install

      - name: Lint
        run: pnpm run lint

      - name: Type Check
        run: pnpm run type-check

      - name: Format Check
        run: pnpm run format:check

      - name: Unit Tests
        run: pnpm run test:run

      - name: Build
        run: pnpm run build

      - name: Check Task Link (advisory)
        uses: ./.github/actions/check-task-link
        with:
          pr-body: ${{ github.event.pull_request.body }}
          enforce: false
        env:
          # Provide alternative env keys for robustness if input is empty
          INPUT_PR_BODY: ${{ github.event.pull_request.body }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate-openbadges-compliance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install Dependencies
        run: pnpm install

      - name: OpenBadges Compliance Check
        # Ensure local action dependencies are installed and token is available
        run: |
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          node index.js
        working-directory: ./.github/actions/validate-openbadges-compliance
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Run Security Audit
        run: pnpm audit --audit-level moderate

      - name: Check for sensitive data
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Get changed files
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // Stricter patterns to avoid false positives from variable names or log messages
            const sensitivePatterns = [
              /password\s*[:=]\s*['"][^'"\n]{8,}['"]/i,
              /api[_-]?key\s*[:=]\s*['"][A-Za-z0-9_\-]{20,}['"]/i,
              /secret\s*[:=]\s*['"][A-Za-z0-9_\-]{20,}['"]/i,
              /token\s*[:=]\s*['"][A-Za-z0-9_\-]{20,}['"]/i,
              /-----BEGIN\s+(?:RSA\s+)?PRIVATE\s+KEY-----/
            ];

            let foundSensitive = false;

            for (const file of files) {
              if (file.status === 'added' || file.status === 'modified') {
                // Skip docs and non-code files
                const filename = file.filename;
                const ext = path.extname(filename).toLowerCase();
                const skip = filename === '.env.example' || filename.startsWith('docs/') || ext === '.md' || ext === '.png' || ext === '.jpg' || ext === '.jpeg' || ext === '.svg' || ext === '';
                if (skip) continue;
                try {
                  const content = fs.readFileSync(filename, 'utf8');
                  for (const pattern of sensitivePatterns) {
                    if (pattern.test(content)) {
                      console.log(`⚠️ Potential sensitive data found in ${filename}`);
                      foundSensitive = true;
                    }
                  }
                } catch (error) {
                  // File might not exist in checkout, skip
                }
              }
            }

            if (foundSensitive) {
              core.setFailed('Potential sensitive data detected in PR. Please review and remove any hardcoded secrets.');
            }

  pr-title-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Title Format
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title;
            const conventionalCommitPattern = /^(feat|fix|docs|style|refactor|perf|test|chore|ci|build)(\(.+\))?: .+/;

            if (!conventionalCommitPattern.test(title)) {
              core.setFailed(`PR title "${title}" does not follow conventional commit format. 
              Expected format: type(scope): description
              Examples: 
              - feat(auth): add OAuth integration
              - fix(badges): resolve verification issue
              - docs(api): update OpenBadges endpoints`);
            }
