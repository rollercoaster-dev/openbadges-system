name: Issue Management

on:
  issues:
    types: [opened, closed, labeled, assigned]
  pull_request:
    types: [opened, closed, merged, ready_for_review]

jobs:
  sync-tasks:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' && github.event.issue
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sync Issue to Task
        run: |
          npm ci --no-audit --no-fund
          node index.js
        working-directory: ./.github/actions/sync-issue-to-task
        env:
          INPUT_ISSUE-NUMBER: ${{ github.event.issue.number }}
          INPUT_ISSUE-TITLE: ${{ github.event.issue.title }}
          INPUT_ISSUE-BODY: ${{ github.event.issue.body }}
          INPUT_ISSUE-LABELS: ${{ join(github.event.issue.labels.*.name, ',') }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-task-status:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.issue
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update Task Status to Complete
        run: |
          npm ci --no-audit --no-fund
          node index.js
        working-directory: ./.github/actions/update-task-status
        env:
          INPUT_ISSUE-NUMBER: ${{ github.event.issue.number }}
          INPUT_STATUS: COMPLETE
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  handle-pr-events:
    runs-on: ubuntu-latest
    if: github.event.pull_request
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update Task Status for PR
        run: |
          npm ci --no-audit --no-fund
          node index.js
        working-directory: ./.github/actions/update-task-status
        env:
          INPUT_PR-NUMBER: ${{ github.event.pull_request.number }}
          INPUT_PR-BODY: ${{ github.event.pull_request.body }}
          INPUT_STATUS: ${{ github.event.action == 'opened' && 'IN_PROGRESS' || github.event.action == 'merged' && 'COMPLETE' || 'IN_PROGRESS' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-label:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' && github.event.issue
    steps:
      - name: Auto-assign component labels
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const body = issue.body || '';

            // Extract component from issue template
            const componentMatch = body.match(/### Component\s*\n\s*([^\n]+)/);
            if (componentMatch) {
              const component = componentMatch[1].trim().toLowerCase();
              const labelMap = {
                'authentication': 'component: authentication',
                'badge management': 'component: badge-management',
                'verification': 'component: verification',
                'user management': 'component: user-management',
                'api': 'component: api',
                'frontend': 'component: frontend',
                'compliance': 'component: compliance',
                'security': 'component: security',
                'documentation': 'component: documentation',
                'infrastructure': 'component: infrastructure'
              };
              
              const label = labelMap[component];
              if (label) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: [label]
                });
              }
            }

            // Extract priority from issue template
            const priorityMatch = body.match(/### Priority\s*\n\s*([^\n]+)/);
            if (priorityMatch) {
              const priority = priorityMatch[1].trim().toLowerCase();
              const priorityLabelMap = {
                'critical': 'priority: critical',
                'high': 'priority: high',
                'medium': 'priority: medium',
                'low': 'priority: low'
              };
              
              const priorityLabel = priorityLabelMap[priority];
              if (priorityLabel) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: [priorityLabel]
                });
              }
            }

            // Add OpenBadges compliance label if mentioned
            if (body.toLowerCase().includes('openbadges') || body.toLowerCase().includes('compliance')) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: ['openbadges-compliance']
              });
            }
